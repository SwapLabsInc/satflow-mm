# This sample file contains placeholders for environment variables.
# Do NOT include actual secret values here.

# Comma-separated list of collections/runes to process
# Format for Ordinals: collection_name
# Format for Runes: rune:TICKER (e.g., "rune:DOGGOTOTHEMOON")
COLLECTIONS="runestone,nodemonkes,rune:DOGGOTOTHEMOON"

# How often the script should run (in seconds)
LOOP_SECONDS=15

# Minimum percentage difference required before updating listings/bids (e.g., 0.01 for 1%)
UPDATE_THRESHOLD=0.01

# Maximum allowed ratio between bid price and lowest list price (e.g., 0.9 means bids cannot exceed 90% of lowest list)
# Note: MIN_BID_TO_LIST_RATIO is supported for backward compatibility, but MAX_BID_TO_LIST_RATIO is preferred
MAX_BID_TO_LIST_RATIO=0.9

# Required API Keys and Wallet Configuration

# Option 1: Unencrypted seed (not recommended for production)
# LOCAL_WALLET_SEED="your twelve word seed phrase here this should be a fresh wallet not used anywhere else except for unisat in your browser"

# Option 2: Encrypted seed (recommended for production)
# Run 'npm run encrypt-seed' to generate this value
# You will be prompted for the password each time the app starts
LOCAL_WALLET_SEED_ENCRYPTED="your-encrypted-seed-here"

SATFLOW_API_KEY="your-satflow-api-key"

# Optional Configuration
#ZENROWS_API_KEY="your-zenrows-api-key"

# Comma-separated list of additional wallet addresses to ignore when fetching market listings
# These addresses' listings will be excluded from price calculations (in addition to your own wallet's listings)
IGNORED_MARKET_ADDRESSES="bc1example123,bc1example456"

# Runestone Collection Settings
RUNESTONE_NUM_CHEAPEST_ITEMS=10
RUNESTONE_LIST_ABOVE_PERCENT=1.2
RUNESTONE_MAX_BID_TOTAL=100000

# Option 1: Single price bidding (simple)
RUNESTONE_BID_BELOW_PERCENT=0.8

# Option 2: Ladder price bidding (advanced)
# Format: "price1:allocation1,price2:allocation2,..."
# Where price is a percentage of average market price (e.g., 0.9 = 90%)
# And allocation is a percentage of MAX_BID_TOTAL (e.g., 0.3 = 30%)
# Example: 3 ladder steps with decreasing prices and increasing allocations
# Note: For Ordinals, all bid prices are rounded to 1000 sat increments (Satflow API requirement)
# RUNESTONE_BID_LADDER="0.9:0.2,0.85:0.3,0.8:0.5"

# Nodemonkes Collection Settings
NODEMONKES_NUM_CHEAPEST_ITEMS=10
NODEMONKES_LIST_ABOVE_PERCENT=1.2
NODEMONKES_MAX_BID_TOTAL=100000

# Option 1: Single price bidding (simple)
NODEMONKES_BID_BELOW_PERCENT=0.8

# Option 2: Ladder price bidding (advanced)
# Example: 2 ladder steps with different price points
# Note: For Ordinals, all bid prices are rounded to 1000 sat increments (Satflow API requirement)
# NODEMONKES_BID_LADDER="0.85:0.2,0.83:0.4,0.8:0.4"

# Runes Settings
# Format: [RUNE_TICKER]_BID_BELOW_PERCENT=[value]
# Format: [RUNE_TICKER]_LIST_ABOVE_PERCENT=[value]
# Format: [RUNE_TICKER]_MAX_BID_TOTAL=[amount]
# Format: [RUNE_TICKER]_MARKET_DEPTH_SATS=[amount] (required, e.g. 10000000 for 10M sats depth)
# Format: [RUNE_TICKER]_FULL_TICKER=[value] (required, maps shortened ticker to full ticker with dots)

# DOGGOTOTHEMOON Rune Settings
DOGGOTOTHEMOON_LIST_ABOVE_PERCENT=1.2
DOGGOTOTHEMOON_MAX_BID_TOTAL=100000000
DOGGOTOTHEMOON_MARKET_DEPTH_SATS=10000000
DOGGOTOTHEMOON_FULL_TICKER=DOG•GO•TO•THE•MOON

# Option 1: Single price bidding (simple)
DOGGOTOTHEMOON_BID_BELOW_PERCENT=0.8

# Option 2: Ladder price bidding (advanced)
# Example: 4 ladder steps with gradually decreasing prices
# DOGGOTOTHEMOON_BID_LADDER="0.85:0.1,0.8:0.2,0.75:0.3,0.70:0.4"

# Premium Inscription Settings
# Format: PREMIUM_INSCRIPTION_[inscription_id]=[premium_multiplier]
# Example: Set a 20% premium (1.2x) on a specific inscription
#PREMIUM_INSCRIPTION_453e34032316ec1eaaf15ae23f702dbe5599b00943f1786c6cc935edbbf6b22ci1023=1.2
